# It's not real "perl"! It's just looks like it.
test_post( "Empty sub", <<'CODE', <<'RESULT');
.sub "main"
.end
CODE
"postshortcut" => PMC 'POST;Node'  {
    <main_sub> => "main"
    [0] => PMC 'POST;Sub'  {
        <name> => \postshortcut
    }
}
RESULT

test_post( "Simple sub", <<'CODE', <<'RESULT');
.sub "main"
    say "Hello, World"
.end
CODE
"postshortcut" => PMC 'POST;Node'  {
    <main_sub> => "main"
    [0] => PMC 'POST;Sub'  {
        <name> => "main"
        [0] => PMC 'POST;Op'  {
            <pirop> => "say"
            [0] => PMC 'POST;Constant'  {
                <type> => "sc"
                <value> => "Hello, World"
            }
        }
    }
}
RESULT

test_post( "Symtable (params)", <<'CODE', <<'RESULT');
.sub "main"
    .param pmc    a
    .param string b
    .param int    c
    .param num    d
.end
CODE
"postshortcut" => PMC 'POST;Node'  {
    <main_sub> => "main"
    [0] => PMC 'POST;Sub'  {
        <name> => "main"
        <symtable> => Hash {
            "a" => PMC 'POST;Register'  {
                <declared> => 1
                <name> => "a"
                <type> => "p"
            },
            "b" => PMC 'POST;Register'  {
                <declared> => 1
                <name> => "b"
                <type> => "s"
            },
            "c" => PMC 'POST;Register'  {
                <declared> => 1
                <name> => "c"
                <type> => "i"
            },
            "d" => PMC 'POST;Register'  {
                <declared> => 1
                <name> => "d"
                <type> => "n"
            }
        }
    }
}
RESULT

test_post( "Undeclared variable", <<'CODE', <<'RESULT', "fail_like" => "Register 'foo' not predeclared");
.sub "main"
    say foo
.end
CODE
dummy
RESULT

test_post( "Symtable (params usage)", <<'CODE', <<'RESULT');
.sub "main"
    .param pmc    a
    say a
.end
CODE
"postshortcut" => PMC 'POST;Node'  {
    <main_sub> => "main"
    [0] => PMC 'POST;Sub'  {
        <name> => "main"
        <symtable> => Hash {
            "a" => PMC 'POST;Register'  {
                <declared> => 1
                <name> => "a"
                <type> => "p"
            }
        }
        [0] => PMC 'POST;Op'  {
            <pirop> => "say"
            [0] => PMC 'POST;Value'  {
                <name> => "a"
            }
        }
    }
}
RESULT

test_post( "Symtable (.local usage)", <<'CODE', <<'RESULT');
.sub "main"
    .local pmc    a
    say a
.end
CODE
"postshortcut" => PMC 'POST;Node'  {
    <main_sub> => "main"
    [0] => PMC 'POST;Sub'  {
        <name> => "main"
        <symtable> => Hash {
            "a" => PMC 'POST;Register'  {
                <declared> => 1
                <name> => "a"
                <type> => "p"
            }
        }
        [0] => PMC 'POST;Op'  {
            <pirop> => "say"
            [0] => PMC 'POST;Value'  {
                <name> => "a"
            }
        }
    }
}
RESULT


test_post( "Redeclaration of variable", <<'CODE', <<'RESULT', "fail_like" => "Redeclaration of");
.sub "main"
    .local pmc foo
    .local pmc foo
    say foo
.end
CODE
dummy
RESULT


# vim: ft=perl6
